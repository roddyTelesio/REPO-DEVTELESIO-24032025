<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Assign AccountShare records count to VarAccountShareRecordsCount</description>
        <name>Get_AccountShare_Count</name>
        <label>Get AccountShare Count</label>
        <locationX>1716</locationX>
        <locationY>607</locationY>
        <assignmentItems>
            <assignToReference>VarAccountShareRecordsCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>VarCollectionAccountShare</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_AccountShare_Count</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assign AccountShare records count to VarAccountShareRecordsCount</description>
        <name>Get_AccountShare_Count_2</name>
        <label>Get AccountShare Count</label>
        <locationX>1014</locationX>
        <locationY>1049</locationY>
        <assignmentItems>
            <assignToReference>VarAccountShareRecordsCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>VarCollectionAccountShare</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_AccountShare_Count_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Get_PublicGroup_Count</name>
        <label>Get Public Group Count</label>
        <locationX>318</locationX>
        <locationY>209</locationY>
        <assignmentItems>
            <assignToReference>VarGroupRecordsCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>VarCollectionGroups</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>RetrieveAllInternalUsers</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>If AccountShare records count equals 0 then create an AccountShare record related to current Company</description>
        <name>Check_AccountShare_Count</name>
        <label>Check AccountShare Count</label>
        <locationX>1862</locationX>
        <locationY>607</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Count_AccountShare_Equals_Zero</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccountShareRecordsCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_AccountShare</targetReference>
            </connector>
            <label>Count_AccountShare_Equals_Zero</label>
        </rules>
    </decisions>
    <decisions>
        <description>If AccountShare records count equals 0 then create an AccountShare record related to current Company</description>
        <name>Check_AccountShare_Count_2</name>
        <label>Check AccountShare Count</label>
        <locationX>1243</locationX>
        <locationY>1051</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Count_AccountShare_Equals_Zero_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarAccountShareRecordsCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_AccountShare_2</targetReference>
            </connector>
            <label>Count_AccountShare_Equals_Zero</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Company_RecordType</name>
        <label>Check Company RecordType DeveloperName</label>
        <locationX>551</locationX>
        <locationY>646</locationY>
        <defaultConnectorLabel>FAULT</defaultConnectorLabel>
        <rules>
            <name>RT_Is_CompanyGroup</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarCompanyRT</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CompanyGroup</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Public_Group_For_Company_Group</targetReference>
            </connector>
            <label>RT_Is_CompanyGroup</label>
        </rules>
        <rules>
            <name>RT_Is_PrincipalCedingCompany</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarCompanyRT</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>PrincipalCedingCompany</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_PublicGroup_PrincipalCedingCompany</targetReference>
            </connector>
            <label>RT_Is_PrincipalCedingCompany</label>
        </rules>
        <rules>
            <name>RT_Is_CoveredCedingCompany</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarCompanyRT</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CoveredCedingCompany</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_PublicGroup_CoveredCedingCompany</targetReference>
            </connector>
            <label>RT_Is_CoveredCedingCompany</label>
        </rules>
        <rules>
            <name>RT_Is_Broker</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarCompanyRT</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Broker</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_PublicGroup_Broker</targetReference>
            </connector>
            <label>RT_Is_Broker</label>
        </rules>
        <rules>
            <name>RT_Is_Reinsurer</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarCompanyRT</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reinsurer</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_PublicGroup_Reinsurer</targetReference>
            </connector>
            <label>RT_Is_Reinsurer</label>
        </rules>
    </decisions>
    <decisions>
        <description>If there is no Public Group (VarRecordsCount = 0), we create a Public Group record</description>
        <name>Check_PublicGroup_Count</name>
        <label>Check Public Group Count</label>
        <locationX>309</locationX>
        <locationY>642</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>PublicGroup_Count_Equals_Zero</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarGroupRecordsCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Company_RecordType</targetReference>
            </connector>
            <label>Public Group Count Equals Zero</label>
        </rules>
        <rules>
            <name>Public_Group_Count_One</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>VarGroupRecordsCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_PublicGroup_AccountReferentialId_2</targetReference>
            </connector>
            <label>Public Group Count Equals One</label>
        </rules>
    </decisions>
    <description>Create a Public Group related to a Company to manage Account Team Members from related Public Group</description>
    <interviewLabel>&lt;b&gt;Flow_Account_CreatePublicGroup&lt;/b&gt;

RESOURCE VALUES 
&lt;p&gt;Execution date: {!$Flow.CurrentDateTime}&lt;/p&gt;
&lt;p&gt;Record: {!$Flow.CurrentRecord}&lt;/p&gt;
&lt;p&gt;Company Name: {!VarCompanyName}&lt;/p&gt;
&lt;p&gt;Company Id: {!VarCompanyId}&lt;/p&gt;
&lt;p&gt;Public Group Id: {!VarGroupId}&lt;/p&gt;
&lt;p&gt;Error: {!$Flow.FaultMessage}&lt;/p&gt;</interviewLabel>
    <label>Flow_Account_CreatePublicGroup</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Create AccountShare record for related Public Group</description>
        <name>Create_AccountShare</name>
        <label>Create AccountShare</label>
        <locationX>2089</locationX>
        <locationY>605</locationY>
        <inputAssignments>
            <field>AccountAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>VarCompanyId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CaseAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>VarGroupId</elementReference>
            </value>
        </inputAssignments>
        <object>AccountShare</object>
    </recordCreates>
    <recordCreates>
        <description>Create AccountShare record for related Public Group</description>
        <name>Create_AccountShare_2</name>
        <label>Create AccountShare</label>
        <locationX>1498</locationX>
        <locationY>1047</locationY>
        <inputAssignments>
            <field>AccountAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>VarCompanyId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CaseAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>VarGroupId</elementReference>
            </value>
        </inputAssignments>
        <object>AccountShare</object>
    </recordCreates>
    <recordCreates>
        <description>Create a Public Group with GroupName equals to ReferentialId and Label equals to CompanyName</description>
        <name>Create_Public_Group_For_Company_Group</name>
        <label>Create Public Group For Company Group</label>
        <locationX>1051</locationX>
        <locationY>894</locationY>
        <assignRecordIdToReference>VarGroupId</assignRecordIdToReference>
        <connector>
            <targetReference>Get_AccountShare_Records</targetReference>
        </connector>
        <inputAssignments>
            <field>DeveloperName</field>
            <value>
                <elementReference>VarReferentialId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>VarCompanyName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Regular</stringValue>
            </value>
        </inputAssignments>
        <object>Group</object>
    </recordCreates>
    <recordCreates>
        <description>Create a Public Group with GroupName equals to ReferentialId and Label equals to CompanyName</description>
        <name>Create_PublicGroup_Broker</name>
        <label>Create Public Group for Broker</label>
        <locationX>1052</locationX>
        <locationY>581</locationY>
        <assignRecordIdToReference>VarGroupId</assignRecordIdToReference>
        <connector>
            <targetReference>Get_AccountShare_Records</targetReference>
        </connector>
        <inputAssignments>
            <field>DeveloperName</field>
            <value>
                <elementReference>VarReferentialId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>VarCompanyName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Regular</stringValue>
            </value>
        </inputAssignments>
        <object>Group</object>
    </recordCreates>
    <recordCreates>
        <description>Create a Public Group with GroupName equals to ReferentialId and Label equals to CompanyName</description>
        <name>Create_PublicGroup_CoveredCedingCompany</name>
        <label>Create Public Group for CoveredCedingCompany</label>
        <locationX>1044</locationX>
        <locationY>424</locationY>
        <assignRecordIdToReference>VarGroupId</assignRecordIdToReference>
        <connector>
            <targetReference>Get_AccountShare_Records</targetReference>
        </connector>
        <inputAssignments>
            <field>DeveloperName</field>
            <value>
                <elementReference>VarReferentialId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>VarCompanyName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Regular</stringValue>
            </value>
        </inputAssignments>
        <object>Group</object>
    </recordCreates>
    <recordCreates>
        <description>Create a Public Group with GroupName equals to ReferentialId and Label equals to CompanyName</description>
        <name>Create_PublicGroup_PrincipalCedingCompany</name>
        <label>Create Public Group for PrincipalCedingCompany</label>
        <locationX>1041</locationX>
        <locationY>250</locationY>
        <assignRecordIdToReference>VarGroupId</assignRecordIdToReference>
        <connector>
            <targetReference>Get_AccountShare_Records</targetReference>
        </connector>
        <inputAssignments>
            <field>DeveloperName</field>
            <value>
                <elementReference>VarReferentialId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>VarCompanyName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Regular</stringValue>
            </value>
        </inputAssignments>
        <object>Group</object>
    </recordCreates>
    <recordCreates>
        <description>Create a Public Group with GroupName equals to ReferentialId and Label equals to CompanyName</description>
        <name>Create_PublicGroup_Reinsurer</name>
        <label>Create Public Group for Reinsurer</label>
        <locationX>1050</locationX>
        <locationY>728</locationY>
        <assignRecordIdToReference>VarGroupId</assignRecordIdToReference>
        <connector>
            <targetReference>Get_AccountShare_Records</targetReference>
        </connector>
        <inputAssignments>
            <field>DeveloperName</field>
            <value>
                <elementReference>VarReferentialId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>VarCompanyName</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Regular</stringValue>
            </value>
        </inputAssignments>
        <object>Group</object>
    </recordCreates>
    <recordLookups>
        <description>Verify count of AccountShare records related to current Company before creating AccountShare record with read only right for Public Group</description>
        <name>Get_AccountShare_Records</name>
        <label>Get AccountShare Records</label>
        <locationX>1537</locationX>
        <locationY>605</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_AccountShare_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarCompanyId</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarGroupId</elementReference>
            </value>
        </filters>
        <object>AccountShare</object>
        <outputReference>VarCollectionAccountShare</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Verify count of AccountShare records related to current Company before creating AccountShare record with read only right for Public Group</description>
        <name>Get_AccountShare_Records_2</name>
        <label>Get AccountShare Records</label>
        <locationX>791</locationX>
        <locationY>1049</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_AccountShare_Count_2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarCompanyId</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarGroupId</elementReference>
            </value>
        </filters>
        <object>AccountShare</object>
        <outputReference>VarCollectionAccountShare</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get Public Group records for Account ReferentialId</description>
        <name>Get_PublicGroup_AccountReferentialId</name>
        <label>Get Public Group records for Account ReferentialId</label>
        <locationX>141</locationX>
        <locationY>209</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_PublicGroup_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarReferentialId</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputReference>VarCollectionGroups</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <description>Get Public Group records for Account ReferentialId</description>
        <name>Get_PublicGroup_AccountReferentialId_2</name>
        <label>Get Public Group records for Account ReferentialId</label>
        <locationX>318</locationX>
        <locationY>1049</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Public_Group_Label_Prefix</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarReferentialId</elementReference>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>VarGroupId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>Retrieve All Internal Users</description>
        <name>RetrieveAllInternalUsers</name>
        <label>Retrieve All Internal Users</label>
        <locationX>318</locationX>
        <locationY>428</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_PublicGroup_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Custom_AllInternalUsers</stringValue>
            </value>
        </filters>
        <object>Group</object>
        <outputAssignments>
            <assignToReference>varGroupAllInternalUsersId</assignToReference>
            <field>Id</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Update_Public_Group_Label_Prefix</name>
        <label>Update Public Group Label Prefix</label>
        <locationX>562</locationX>
        <locationY>1049</locationY>
        <connector>
            <targetReference>Get_AccountShare_Records_2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>VarGroupId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>VarCompanyName</elementReference>
            </value>
        </inputAssignments>
        <object>Group</object>
    </recordUpdates>
    <start>
        <locationX>141</locationX>
        <locationY>52</locationY>
        <connector>
            <targetReference>Get_PublicGroup_AccountReferentialId</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores AccountShare records count</description>
        <name>VarAccountShareRecordsCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores collection of AccountShare records</description>
        <name>VarCollectionAccountShare</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>VarCollectionGroups</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Group</objectType>
    </variables>
    <variables>
        <description>Account record Id</description>
        <name>VarCompanyId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>VarCompanyName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <description>Stores Company RecordType DeveloperName</description>
        <name>VarCompanyRT</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>varGroupAllInternalUsersId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Public Group Id created</description>
        <name>VarGroupId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>VarGroupRecordsCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varInternalUserId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>VarReferentialId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
</Flow>
